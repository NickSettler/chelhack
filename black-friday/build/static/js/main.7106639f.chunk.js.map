{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","classes/Cart.js","classes/API.js","components/Good/Good.js","components/Snackbar/Snackbar.js","pages/Home/Home.js","components/CartItem/CartItem.js","pages/Cart/Cart.js","pages/Search/Search.js","pages/SearchRedirect/SearchRedirect.js","pages/GoodPage/GoodPage.js","pages/404/404.js","pages/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","showParentSearch","bind","this","openSearch","className","to","onClick","React","Component","Search","state","query","redirect","handleInputChange","close","event","persist","setState","target","value","key","closeHandler","push","style","shown","visibility","opacity","ref","inputRef","onChange","onKeyPress","type","CartItem","id","count","Cart","localStorage","setItem","itemId","getItems","find","item","items","currentItem","newItems","filter","JSON","stringify","console","log","getItem","parse","Good","title","availability","price","finalPrice","category","availableInDays","brand","brandId","quantity","imageUrl","parameters","API","url","params","form","FormData","append","body","urlParams","URLSearchParams","result","fetch","fetched","buffer","json","text","request","mode","method","credentials","headers","array1","array2","length","i","goodsRaw","status","goods","data","map","good","localGoods","equal","message","getGoods","replace","regexpQuery","RegExp","test","allGoods","includes","min","max","param","filters","ram","mem","cart","fromHome","findFilter","lazyLoadGoods","isInCart","redirectToCart","addToCart","openItem","getItemById","input","toLocaleString","addItem","updateHandler","isPreloading","src","process","formatPrice","Snackbar","action","Home","page","isSuccess","loading","minRam","maxRam","minMem","maxMem","search","ramArray","memArray","changePage","closeSearch","goodUpdateHandler","enableFilters","resetFilters","handleMinRamUpdate","handleMaxRamUpdate","handleMinMemUpdate","handleMaxMemUpdate","handleNumberInput","newPage","Math","ceil","match","applyFilters","undefined","getGoodsByFilters","then","array","response","fillGoods","prevProps","prevState","preventDefault","placeholder","Array","fill","_","GoodItem","slice","plusItem","minusItem","handleCountChange","editItem","handleChange","removeItem","maxLength","parseInputCount","CartPage","clearItems","fillItems","openForm","sort","a","b","forEach","cartItem","getGoodById","redirectToForm","SearchPage","searchGoods","SearchRedirect","GoodPage","back","addCart","Error404","Form","isSent","name","surname","phone","error","submit","handleNameInput","handleSurnameInput","handlePhoneInput","App","toggleSearch","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7106639f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.showParentSearch = this.showParentSearch.bind(this);\r\n    }\r\n\r\n    showParentSearch(){\r\n        this.props.openSearch();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"header\">\r\n                <div className=\"header__logo\">\r\n                    <Link className=\"header__link-block header__logo-block\" to=\"/black-friday\">\r\n                        <span className=\"header__logo-letter\">B</span>\r\n                        <span className=\"header__logo-text\">Friday</span>\r\n                    </Link>\r\n                </div>\r\n                <nav className=\"header__menu\">\r\n                    <div className=\"header__link\" onClick={this.showParentSearch}>Поиск</div>\r\n                    <Link className=\"header__link-block\" to=\"/black-friday/filter/smartphones\"><div className=\"header__link\">Смартфоны</div></Link>\r\n                    <Link className=\"header__link-block\" to=\"/black-friday/filter/laptops\"><div className=\"header__link\">Ноутбуки</div></Link>\r\n                    <Link className=\"header__link-block\" to=\"/black-friday/cart\"><div className=\"header__link\">Корзина</div></Link>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Search.scss\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: \"\",\r\n            redirect: false,\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.openSearch = this.openSearch.bind(this)\r\n    }\r\n\r\n    handleInputChange(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            query: event.target.value\r\n        })\r\n    }\r\n\r\n    openSearch(event){\r\n        event.persist();\r\n        if(event.key === \"Enter\"){\r\n            this.props.closeHandler();\r\n            this.setState({\r\n                ...this.state,\r\n                redirect: true\r\n            })\r\n        }\r\n    }\r\n\r\n    close(){\r\n        this.props.closeHandler();\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/black-friday/search_redirect/\"+this.state.query} push />\r\n        }\r\n        return(\r\n            <div className=\"search-overlay\" style={this.props.shown ? {visibility: \"visible\", opacity: 1} : {visibility: \"hidden\", opacity: 0.0}}>\r\n                <div className=\"search-overlay__close\" onClick={this.close}></div>\r\n                <div className=\"search-overlay__row search-overlay__row-input\">\r\n                    <input ref={this.inputRef} onChange={this.handleInputChange} onKeyPress={this.openSearch} type=\"text\" value={this.state.query} className=\"search-overlay__input\" />\r\n                </div>\r\n                <div className=\"search-overlay__block\">\r\n                    <div className=\"search-overlay__row\">\r\n                        <Link className=\"search-overlay__link-block\" onClick={this.close} to=\"/black-friday/filter/smartphones\">\r\n                            <span className=\"search-overlay__link\">\r\n                                Смартфоны\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"search-overlay__row\">\r\n                        <Link className=\"search-overlay__link-block\" onClick={this.close} to=\"/black-friday/filter/laptops\">\r\n                            <span className=\"search-overlay__link\">\r\n                                Ноутбуки\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"search-overlay__row\">\r\n                        <Link className=\"search-overlay__link-block\" onClick={this.close} to=\"/black-friday/cart\">\r\n                            <span className=\"search-overlay__link\">\r\n                                Корзина\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","class CartItem {\r\n    constructor({\r\n        id = null,\r\n        count = 0\r\n    } = {}) {\r\n        this.id = id;\r\n        this.count = count;\r\n    }\r\n}\r\n\r\nexport default class Cart {\r\n    static clearItems() {\r\n        return localStorage.setItem('cart', '[]')\r\n    }\r\n\r\n    static getItem(itemId) {\r\n        let items = Cart.getItems();\r\n\r\n        let currentItem = items.find((item) => (\r\n            item.id === itemId\r\n        )) || null;\r\n\r\n        return currentItem;\r\n    }\r\n\r\n    static editItem(itemId, count = null) {\r\n        let items = Cart.getItems();\r\n\r\n        let currentItem = items.find((item) => (\r\n            item.id === itemId\r\n        ));\r\n\r\n        if (!currentItem) {\r\n            currentItem = new CartItem({\r\n                id: itemId\r\n            });\r\n        }\r\n\r\n        currentItem.count = count;\r\n\r\n        const newItems = [\r\n            ...items.filter(item => item.id !== itemId),\r\n            currentItem\r\n        ];\r\n\r\n        return localStorage.setItem('cart', JSON.stringify(newItems));\r\n    }\r\n\r\n    static addItem(itemId) {\r\n        let items = Cart.getItems();\r\n        let currentItem = items.find((item) => (\r\n            item.id === itemId\r\n        ));\r\n\r\n        console.log(currentItem);\r\n\r\n        if (!currentItem) {\r\n            currentItem = new CartItem({\r\n                id: itemId\r\n            });\r\n        }\r\n\r\n        currentItem.count++;\r\n\r\n        const newItems = [\r\n            ...items.filter(item => item.id !== itemId),\r\n            currentItem\r\n        ];\r\n\r\n        return localStorage.setItem('cart', JSON.stringify(newItems));\r\n    }\r\n\r\n    static removeItem(itemId) {\r\n        let items = Cart.getItems();\r\n\r\n        const currentItem = items.find((item) => (\r\n            item.id === itemId\r\n        ));\r\n\r\n        if (!currentItem) {\r\n            return;\r\n        }\r\n\r\n        currentItem.count--;\r\n\r\n        let newItems = items;\r\n\r\n        if (currentItem.count < 1) {\r\n            newItems = items.filter(item => item.id !== itemId);\r\n        } else {\r\n            newItems = [\r\n                ...items.filter(item => item.id !== itemId),\r\n                currentItem\r\n            ];\r\n        }\r\n\r\n        return localStorage.setItem('cart', JSON.stringify(newItems));\r\n    }\r\n\r\n    static getItems() {\r\n        let items = localStorage.getItem('cart');\r\n\r\n        if (!items) {\r\n            localStorage.setItem('cart', '[]');\r\n\r\n            items = localStorage.getItem('cart');\r\n        }\r\n\r\n        return JSON.parse(items);\r\n    }\r\n}","import Cart from './Cart';\r\n\r\nexport class Good {\r\n    constructor({\r\n        id = null,\r\n        title = '',\r\n        availability = true,\r\n        price = 0,\r\n        finalPrice = 0,\r\n        category = '',\r\n        availableInDays = 0,\r\n        brand = '',\r\n        brandId = 0,\r\n        quantity = 0,\r\n        imageUrl = '',\r\n        parameters = []\r\n    } = {}) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.availability = availability;\r\n        this.price = price;\r\n        this.finalPrice = finalPrice;\r\n        this.category = category;\r\n        this.availableInDays = availableInDays;\r\n        this.brand = brand;\r\n        this.brandId = brandId;\r\n        this.quantity = quantity;\r\n        this.imageUrl = imageUrl;\r\n        this.parameters = parameters;\r\n    }\r\n}\r\n\r\nexport default class API {\r\n    static async request(url, params = {}) {\r\n        if (params.form) {\r\n            // eslint-disable-next-line no-undef\r\n            const form = new FormData();\r\n\r\n            for (const key in params.form) {\r\n                form.append(key, params.form[key]);\r\n            }\r\n\r\n            params.body = form;\r\n        }\r\n\r\n        if (params.query) {\r\n            const urlParams = new URLSearchParams(params.query);\r\n\r\n            url += `?${urlParams}`;\r\n        }\r\n\r\n        let result = null;\r\n        // eslint-disable-next-line no-undef\r\n        const fetched = await fetch(url, params);\r\n\r\n        if (!params.buffer && !params.json) {\r\n            result = await fetched.text();\r\n        }\r\n\r\n        if (params.buffer) {\r\n            result = await fetched.buffer();\r\n        }\r\n\r\n        if (params.json) {\r\n            result = await fetched.json();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getGoodsRaw() {\r\n        return API.request(\r\n            'http://chelhack.deletestaging.com/goods',\r\n            {\r\n                // json: true,\r\n                mode: 'cors',\r\n                method: 'GET',\r\n                credentials: \"same-origin\",\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    \"Origin\": \"http://chelhack.deletestaging.com/\"\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    static equal(array1, array2) {\r\n        if (!array1 || !array2) {\r\n            return false;\r\n        }\r\n\r\n        if (array1.length !== array2.length) {\r\n            return false;\r\n        }\r\n        \r\n        for (let i in array1) {\r\n            if (!array2[i]) {\r\n                return false;\r\n            }\r\n            \r\n            if (array1[i].id !== array2[i].id) {\r\n                return false\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    static async lazyLoadGoods() {\r\n        console.log('LAZYLOAD');\r\n        let goodsRaw = await API.request(\r\n            'http://10.100.67.127:8989/userapi/getGoods',\r\n            {\r\n                json: true,\r\n                method: 'POST'\r\n            }\r\n        );\r\n\r\n        if (goodsRaw.status === 'Error') {\r\n            return;\r\n        }\r\n\r\n        const goods = goodsRaw.data.map((good) => new Good(good));\r\n\r\n        let localGoods = localStorage.getItem('goods');\r\n\r\n        localGoods = JSON.parse(localGoods);\r\n\r\n        const isEqual = API.equal(goods, localGoods);\r\n\r\n        if (!isEqual) {\r\n            localStorage.setItem('goods', JSON.stringify(goods));\r\n        }\r\n    }\r\n\r\n    static async searchGoods(query = null) {\r\n        if (query === null) {\r\n            return {\r\n                status: 'Error',\r\n                message: 'Строка поиска не указана'\r\n            }\r\n        }\r\n\r\n        const goods = await API.getGoods('all');\r\n\r\n        if (goods.status === 'Error') {\r\n            return goods;\r\n        }\r\n\r\n        query = query.replace(/[^\\w\\s]/ig, '');\r\n\r\n        const regexpQuery = new RegExp(query, 'ig');\r\n\r\n        return {\r\n            status: 'Success',\r\n            goods: goods.goods.filter((good) => (\r\n                regexpQuery.test(good.title)\r\n            ))\r\n        }\r\n    }\r\n    \r\n    static async getGoodById(itemId = null) {\r\n        if (!itemId) {\r\n            return null;\r\n        }\r\n\r\n        const allGoods = await API.getGoods('all');\r\n\r\n        if (allGoods.status === 'Error') {\r\n            return allGoods;\r\n        }\r\n\r\n        return allGoods.goods.find((good) => (\r\n            good.id === itemId\r\n        )) || null;\r\n    }\r\n\r\n    static mixinArrays(array1, array2) {\r\n        return array1.filter(value => array2.includes(value));\r\n    }\r\n\r\n    static async getGoodByRAM(min, max) {\r\n        const goodsRaw = await API.getGoods();\r\n\r\n        if (goodsRaw.status === 'Error') {\r\n            return goodsRaw;\r\n        }\r\n\r\n        return goodsRaw.goods.filter((good) => {\r\n            const { value } = good.parameters.find(param => param.title === 'RAM');\r\n\r\n            return (\r\n                value <= max\r\n                && value >= min\r\n            );\r\n        });\r\n    }\r\n\r\n    static async getGoodByMem(min, max) {\r\n        const goodsRaw = await API.getGoods();\r\n\r\n        if (goodsRaw.status === 'Error') {\r\n            return goodsRaw;\r\n        }\r\n\r\n        return goodsRaw.goods.filter((good) => {\r\n            const { value } = good.parameters.find(param => ['Built-in memory', 'SSD'].includes(param.title));\r\n\r\n            return (\r\n                value <= max\r\n                && value >= min\r\n            );\r\n        });\r\n    }\r\n\r\n    static async getGoodsByFilters(filters = {}) {\r\n        const goodsRaw = await API.getGoods();\r\n\r\n        if (goodsRaw.status === 'Error') {\r\n            return goodsRaw;\r\n        }\r\n\r\n        return goodsRaw.goods.filter((good) => {\r\n            const { value: ram } = good.parameters.find(param => param.title === 'RAM');\r\n            const { value: mem } = good.parameters.find(param => ['Built-in memory', 'SSD'].includes(param.title));\r\n\r\n            return (\r\n                (filters['RAM'] ? (\r\n                    ram <= filters['RAM'].max\r\n                    && ram >= filters['RAM'].min\r\n                ) : true)\r\n                && (filters['Mem'] ? (\r\n                    mem <= filters['Mem'].max\r\n                    && mem >= filters['Mem'].min\r\n                ) : true)\r\n            )\r\n        });\r\n    }\r\n\r\n    static getItemById(itemId = null) {\r\n        const cart = Cart.getItems();\r\n\r\n        if (!itemId || !cart || !cart.length) {\r\n            return null;\r\n        }\r\n\r\n        return cart.find((item) => (\r\n            item.id === itemId\r\n        )) || null;\r\n    }\r\n\r\n    static async getGoods(filter = 'all', fromHome = false) {\r\n        if (filter !== 'all') {\r\n            const allGoods = await API.getGoods();\r\n\r\n            if (allGoods.status === 'Error') {\r\n                return allGoods;\r\n            }\r\n            \r\n            const findFilter = {\r\n                'smartphones': 'Smartphones',\r\n                'laptops': 'Laptops',\r\n            }[filter]\r\n    \r\n            return {\r\n                status: \"Success\",\r\n                goods: allGoods.goods.filter((good) => (\r\n                    good.category === findFilter\r\n                ))\r\n            };\r\n        } else { \r\n            const localGoods = localStorage.getItem('goods');\r\n\r\n            if (!localGoods) {\r\n                let goodsRaw = await API.request(\r\n                    'http://10.100.67.127:8989/userapi/getGoods',\r\n                    {\r\n                        json: true,\r\n                        method: 'POST'\r\n                    }\r\n                );\r\n                \r\n                if (goodsRaw.status === 'Error') {\r\n                    return goodsRaw;\r\n                }\r\n\r\n                const goods = goodsRaw.data.map((good) => new Good(good));\r\n\r\n                localStorage.setItem('goods', JSON.stringify(goods));\r\n                \r\n                return await API.getGoods();\r\n            } else {\r\n                if (fromHome) {\r\n                    API.lazyLoadGoods();\r\n                }\r\n            }\r\n\r\n            return {\r\n                status: 'Success',\r\n                goods: JSON.parse(localGoods)\r\n            };\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Good.scss\";\r\nimport Cart from \"../../classes/Cart\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport API from \"../../classes/API\";\r\n\r\nclass Good extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect: false,\r\n            isInCart: false,\r\n            redirectToCart: false,\r\n        }\r\n\r\n        this.addToCart = this.addToCart.bind(this);\r\n        this.openItem = this.openItem.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let item = API.getItemById(+this.props.good.id);\r\n        if(item){\r\n            this.setState({\r\n                ...this.state,\r\n                isInCart: true\r\n            });\r\n        }\r\n    }\r\n\r\n    formatPrice(input) {\r\n        return input.toLocaleString('en');\r\n    }\r\n\r\n    addToCart(){\r\n        if(this.state.isInCart){\r\n            this.setState({\r\n                ...this.state,\r\n                redirectToCart: true,\r\n            })\r\n        }else{\r\n            Cart.addItem(this.props.good.id);\r\n            this.props.updateHandler();\r\n        }\r\n    }\r\n    openItem(){\r\n        if(!this.props.isPreloading){\r\n            this.setState({\r\n                ...this.state,\r\n                redirect: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={'/black-friday/good/'+this.props.good.id} push />\r\n        }\r\n        if(this.state.redirectToCart){\r\n            return <Redirect to={'/black-friday/cart/'} push />\r\n        }\r\n        return (\r\n            <div className=\"good\">\r\n                <div onClick={this.openItem} className={\"good__image-block\"+(this.props.isPreloading ? \" good_loading\" : \"\")}>\r\n                    <img src={this.props.good ? process.env.REACT_APP_BASE_API_URL+this.props.good.imageUrl : ''} className=\"good__image\" />\r\n                </div>\r\n                <div className=\"good__content\">\r\n                    <span onClick={this.openItem} className={\"good__title\"+(this.props.isPreloading ? \" good_loading\" : \"\")}>\r\n                        {this.props.good ? this.props.good.title : \"\"}\r\n                    </span>\r\n                    <div className=\"good__down-block\">\r\n                        <span onClick={this.openItem} className={\"good__subtitle_old\"+(this.props.isPreloading ? \" good_loading\" : \"\")}>\r\n                            {this.props.good ? `${this.formatPrice(this.props.good.price)} ₽`: \"\"}\r\n                        </span>\r\n                        <span onClick={this.openItem} className={\"good__subtitle_new\"+(this.props.isPreloading ? \" good_loading\" : \"\")}>\r\n                            {this.props.good ? `${this.formatPrice(this.props.good.finalPrice)} ₽`: \"\"}\r\n                        </span>\r\n                        <div className=\"good__buttons\">\r\n                            <button className={\"good__button\"+(this.props.isPreloading ? \" good_loading\" : \"\")+(this.state.isInCart ? \" good_inCart\" : \"\")} onClick={this.addToCart}>\r\n                                {this.state.isInCart ? (\"Уже в корзине\") : (\"В корзину\")}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Good;","import React from \"react\";\r\nimport \"./Snackbar.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Snackbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"snackbar\">\r\n                <span className=\"snackbar__text\">\r\n                    Товар успешно добавлен в корзину!\r\n                </span>\r\n                {\r\n                    this.props.action ? (\r\n                        <div className=\"snackbar__aciton\">\r\n                            <Link className=\"snackbar__link\" to={this.props.action.action}>\r\n                                {this.props.action.text}\r\n                            </Link>\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Snackbar;","import React from \"react\";\r\nimport \"./Home.scss\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport API from \"../../classes/API\";\r\nimport Good from \"../../components/Good/Good\";\r\nimport {Good as GoodItem} from \"../../classes/API\";\r\nimport Snackbar from \"../../components/Snackbar/Snackbar\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            goods: [],\r\n            isSuccess: true,\r\n            loading: true,\r\n            message: \"\",\r\n            minRam: '',\r\n            maxRam: '',\r\n            minMem: '',\r\n            maxMem: '',\r\n            search: false,\r\n            ramArray: [],\r\n            memArray: [],\r\n        }\r\n\r\n        this.changePage = this.changePage.bind(this);\r\n\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n        this.goodUpdateHandler = this.goodUpdateHandler.bind(this);\r\n\r\n        this.enableFilters = this.enableFilters.bind(this);\r\n        this.resetFilters = this.resetFilters.bind(this);\r\n\r\n        this.handleMinRamUpdate = this.handleMinRamUpdate.bind(this);\r\n        this.handleMaxRamUpdate = this.handleMaxRamUpdate.bind(this);\r\n        this.handleMinMemUpdate = this.handleMinMemUpdate.bind(this);\r\n        this.handleMaxMemUpdate = this.handleMaxMemUpdate.bind(this);\r\n\r\n        this.handleNumberInput = this.handleNumberInput.bind(this);\r\n    }\r\n\r\n    changePage(newPage) {\r\n        const pages = Math.ceil(this.state.goods.length / 12);\r\n\r\n        if (newPage >= pages) {\r\n            newPage--;\r\n        }\r\n\r\n        if (newPage < 0) {\r\n            newPage = 0;\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            page: newPage\r\n        });\r\n\r\n        console.log('PAGE CHANGED', this.state.page, newPage);\r\n\r\n        return;\r\n    }\r\n    \r\n    fillGoods() {\r\n        const {type} = this.props.match.params;\r\n\r\n        let {minRam, maxRam, minMem, maxMem} = this.state;\r\n        \r\n        if (this.state.applyFilters) {\r\n            let filters = {};\r\n            console.log(123);\r\n            \r\n            if (this.state.minRam !== undefined && this.state.maxRam !== undefined) {\r\n                filters['RAM'] = {\r\n                    min: this.state.minRam || 0,\r\n                    max: this.state.maxRam || 100\r\n                };\r\n            }\r\n\r\n            if (this.state.minMem !== undefined && this.state.maxMem !== undefined) {\r\n                filters['Mem'] = {\r\n                    min: this.state.minMem || 0,\r\n                    max: this.state.maxMem || 10000\r\n                };\r\n            }\r\n\r\n            console.log(filters);\r\n            \r\n            API.getGoodsByFilters(filters).then(array => {\r\n                console.log(array);\r\n\r\n                this.setState({\r\n                    ...this.state,\r\n                    goods: array\r\n                });\r\n            });\r\n        } else {\r\n            if(type !== \"smartphones\" && type !== \"laptops\" && type !== undefined) {\r\n                this.setState({\r\n                    ...this.state, \r\n                    loading: false,\r\n                    isSuccess: false,\r\n                    message: \"Указан неправильный тип товара\",\r\n                    minRam: '',\r\n                    maxRam: '',\r\n                    minMem: '',\r\n                    maxMem: '',\r\n                    applyFilters: false,\r\n                });\r\n            } else {\r\n                API.getGoods(type, true).then((response) => {\r\n                    const { status, goods, message } = response;\r\n                    if (status === \"Success\") {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            goods: []\r\n                        });\r\n                        this.setState({\r\n                            ...this.state,\r\n                            goods,\r\n                            loading: false,\r\n                        });\r\n                    } else {\r\n                        console.log(response);\r\n                        this.setState({\r\n                            ...this.state,\r\n                            message,\r\n                            loading: false,\r\n                            isSuccess: false,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fillGoods();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.type !== prevProps.match.params.type){\r\n            this.fillGoods();\r\n        }\r\n        if(this.state.applyFilters !== prevState.applyFilters){\r\n            this.fillGoods();\r\n        }\r\n    }\r\n\r\n    goodUpdateHandler(){\r\n        this.fillGoods();\r\n    }\r\n\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    enableFilters(){\r\n        this.fillGoods();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            applyFilters: true,\r\n        })\r\n    }\r\n\r\n    resetFilters(){\r\n        this.setState({\r\n            ...this.state, \r\n            applyFilters: false,\r\n        });\r\n    }\r\n\r\n    handleNumberInput(event){\r\n        if(!/\\d/.test(event.key)){\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    handleMinRamUpdate(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            minRam: event.target.value\r\n        });\r\n    }\r\n    handleMaxRamUpdate(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            maxRam: +event.target.value\r\n        });\r\n    }\r\n    handleMinMemUpdate(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            minMem: +event.target.value\r\n        });\r\n    }\r\n    handleMaxMemUpdate(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            maxMem: +event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"home\">\r\n\r\n                <Header openSearch={this.openSearch} />\r\n                <div className=\"home__content\">\r\n                    <div className=\"home__filters-block\">\r\n                        <div className=\"home__filters-content\">\r\n                            <div className=\"home__filter-block\">\r\n                                <span className=\"home__filter-title\">Оперативная память</span>\r\n                                <div className=\"home__filter-input-block\">\r\n                                    <input type=\"text\" onKeyPress={this.handleNumberInput} className=\"home__filter-input\" value={this.state.minRam} onChange={this.handleMinRamUpdate} placeholder=\"От\" />\r\n                                    <input type=\"text\" onKeyPress={this.handleNumberInput} className=\"home__filter-input\" value={this.state.maxRam} onChange={this.handleMaxRamUpdate} placeholder=\"До\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"home__filter-block\">\r\n                                <span className=\"home__filter-title\">Физическая память</span>\r\n                                <div className=\"home__filter-input-block\">\r\n                                    <input type=\"text\" onKeyPress={this.handleNumberInput} className=\"home__filter-input\" value={this.state.minMem} onChange={this.handleMinMemUpdate} placeholder=\"От\" />\r\n                                    <input type=\"text\" onKeyPress={this.handleNumberInput} className=\"home__filter-input\" value={this.state.maxMem} onChange={this.handleMaxMemUpdate} placeholder=\"До\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"home__filters-apply-block\">\r\n                            {this.state.applyFilters ? (\r\n                                <button type='button' onClick={this.resetFilters} className=\"home__filters-apply\">\r\n                                    Сбросить фильтры\r\n                                </button>\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                            \r\n                            <button type='button' onClick={this.enableFilters} className=\"home__filters-apply\">\r\n                                Применить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.loading ? (\r\n                            new Array(6).fill().map((_, i) => {\r\n                                return (\r\n                                    <Good key={i} isPreloading={true} good={new GoodItem()} />\r\n                                )\r\n                            })\r\n                        ) : (\r\n                            this.state.isSuccess ? (\r\n                                this.state.applyFilters ? (\r\n                                    this.state.goods.slice(this.state.page * 12, this.state.page * 12 + 12).map((good, i) => {\r\n                                        return (\r\n                                            <Good updateHandler={this.goodUpdateHandler} key={i+6} good={good} />\r\n                                        )\r\n                                    })\r\n                                ) : (\r\n                                    this.state.goods.slice(this.state.page * 12, this.state.page * 12 + 12).map((good, i) => {\r\n                                        return (\r\n                                            <Good updateHandler={this.goodUpdateHandler} key={i+6} good={good} />\r\n                                        )\r\n                                    })\r\n                                )\r\n                            ) : (\r\n                                <div className=\"home__error-container\">\r\n                                    <span className=\"home__error\">Произошла ошибка:</span>\r\n                                    <span className=\"home__error-details\">\r\n                                        {this.state.message}\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }\r\n                    <div className=\"home__page-controls\">\r\n                        <div onClick={() => this.changePage(this.state.page - 1)} className=\"home__page-button\">{\"<\"}</div>\r\n                        {\r\n                            new Array(Math.ceil(this.state.goods.length / 12)).fill().map((_, i) => {\r\n                                return (\r\n                                    <div onClick={() => this.changePage(i)} className={\"home__page-button\"+(this.state.page === i ? \" active\" : \"\")}>{i + 1}</div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div onClick={() => this.changePage(this.state.page + 1)} className=\"home__page-button\">{\">\"}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n                <Snackbar action={{\r\n                    text: \"В корзину\",\r\n                    action: \"/black-friday/cart\"\r\n                }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./CartItem.scss\";\r\nimport Cart from \"../../classes/Cart\";\r\n\r\nclass CartItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            count: this.props.item.count\r\n        }\r\n\r\n        this.plusItem = this.plusItem.bind(this);\r\n        this.minusItem = this.minusItem.bind(this);\r\n        this.handleCountChange = this.handleCountChange.bind(this);\r\n    }\r\n\r\n    parseInputCount(event){\r\n        if(!/\\d/.test(event.key)){\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    handleCountChange(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state,\r\n            count: event.target.value\r\n        });\r\n        Cart.editItem(+this.props.item.id, +event.target.value);\r\n    }\r\n\r\n    formatPrice(price) {\r\n        return price.toLocaleString('en');\r\n    }\r\n\r\n    plusItem(){\r\n        Cart.addItem(+this.props.item.id);\r\n        this.props.handleChange();\r\n    }\r\n    minusItem(){\r\n        Cart.removeItem(+this.props.item.id);\r\n        this.props.handleChange();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"cart-item\">\r\n                <img src={process.env.REACT_APP_BASE_API_URL + this.props.item.imageUrl} className=\"cart-item__image\" />\r\n                <div className=\"cart-item__content\">\r\n                    <span className=\"cart-item__title\">{this.props.item.title}</span>\r\n                    <div className=\"cart-item__count\">\r\n                        <div className=\"cart-item__button\" onClick={this.minusItem}>-</div>\r\n                        <input maxLength=\"3\" type=\"text\" onKeyPress={this.parseInputCount} className=\"cart-item__count-text\" onChange={this.handleCountChange} value={this.state.count} />\r\n                        <div className=\"cart-item__button\" onClick={this.plusItem}>+</div>\r\n                    </div>\r\n                    <span className=\"cart-item__total\">\r\n                        Итого: {this.formatPrice(this.props.item.finalPrice * this.state.count)}₽\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartItem;","import React from \"react\";\r\nimport \"./Cart.scss\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport API from \"../../classes/API\";\r\nimport Cart from '../../classes/Cart';\r\nimport CartItem from \"../../components/CartItem/CartItem\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nclass CartPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            search: false\r\n        };\r\n\r\n        this.clearItems = this.clearItems.bind(this);\r\n        this.fillItems = this.fillItems.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n        this.openForm = this.openForm.bind(this);\r\n    }\r\n\r\n    clearItems() {\r\n        this.setState({\r\n            ...this.state,\r\n            items: []\r\n        });\r\n\r\n        Cart.clearItems();\r\n    }\r\n\r\n    fillItems(){\r\n        this.setState({\r\n            ...this.state,\r\n            items: []\r\n        });\r\n\r\n\r\n        Cart.getItems().sort((a,b)=>b.id-a.id).forEach(cartItem => {\r\n            API.getGoodById(cartItem.id).then(item => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    items: [\r\n                        ...this.state.items,\r\n                        {\r\n                            ...item,\r\n                            count: cartItem.count\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fillItems();\r\n        console.log(this.state.items);\r\n    }\r\n\r\n    formatPrice(price) {\r\n        return price.toLocaleString('en');\r\n    }\r\n\r\n    handleChange(){\r\n        this.fillItems();\r\n    }\r\n\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    openForm(){\r\n        this.setState({\r\n            ...this.state,\r\n            redirectToForm: true,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirectToForm){\r\n            return <Redirect push to=\"/black-friday/form/\" />\r\n        }\r\n        return (\r\n            <div className=\"cart\">\r\n                <Header openSearch={this.openSearch} />\r\n                <div className=\"cart__content\">\r\n                    <div className=\"cart__header\">\r\n                        <span className=\"cart__title\">\r\n                            Корзина\r\n                        </span>\r\n                        <div onClick={this.clearItems} className=\"cart__clear\"></div>\r\n                    </div>\r\n                    {console.log(this.state.items.length)}\r\n                    {this.state.items.length > 0 ? (\r\n                        this.state.items.map((item, i) => {\r\n                            return (\r\n                                <CartItem handleChange={this.handleChange} key={i} item={item} />\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <span className=\"cart__empty\">\r\n                            <span className=\"cart__empty-line\">\r\n                                Ваша корзина пуста\r\n                            </span>\r\n                            <span className=\"cart__empty-line\">\r\n                                Воспользуйтесь каталогом для добавления товаров\r\n                            </span>\r\n                        </span>\r\n                    )}{this.state.items.length > 0 ? (\r\n                        <span className=\"cart__total\">\r\n                            Итого:\r\n                            {}\r\n                        </span>\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                    {this.state.items.length > 0 ? (\r\n                        <button onClick={this.openForm} type=\"button\" className=\"cart__button\">Оформить заказ</button>\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartPage;","import React from \"react\";\r\nimport \"./Search.scss\";\r\nimport API from \"../../classes/API\";\r\nimport Good from \"../../components/Good/Good\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\n\r\nclass SearchPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goods: [],\r\n            query: this.props.match.params.query || \"\",\r\n        };\r\n\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.goodUpdateHandler = this.goodUpdateHandler.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        event.persist();\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            ...this.state,\r\n            query: event.target.value\r\n        })\r\n        API.searchGoods(event.target.value).then(goods => {\r\n            console.log(goods);\r\n            this.setState({\r\n                ...this.state,\r\n                goods: goods.goods\r\n            })\r\n        })\r\n    }\r\n\r\n    goodUpdateHandler(){\r\n        API.searchGoods(this.state.query).then(goods => {\r\n            console.log(goods);\r\n            this.setState({\r\n                ...this.state,\r\n                goods: []\r\n            })\r\n            this.setState({\r\n                ...this.state,\r\n                goods: goods.goods\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        API.searchGoods(this.state.query).then(goods => {\r\n            console.log(goods);\r\n            this.setState({\r\n                ...this.state,\r\n                goods: goods.goods\r\n            })\r\n        })\r\n    }\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"search\">\r\n                <Header openSearch={this.openSearch} />\r\n                <div className=\"search__content\">\r\n                    <div className=\"search__header\">\r\n                        <span className=\"search__title\">Поиск</span>\r\n                        <div className=\"search__form-block\">\r\n                            <span className=\"search__form-title\">Введите запрос</span>\r\n                            <input type=\"text\" className=\"search__form-input\" value={this.state.query} onChange={this.handleInputChange} onKeyPress={this.search} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search__items\">\r\n                        {\r\n                            this.state.goods.map((good, i) => {\r\n                                return(\r\n                                    <Good updateHandler={this.goodUpdateHandler} key={i} good={good} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass SearchRedirect extends React.Component{\r\n    render(){\r\n        return (\r\n            <Redirect to={\"/black-friday/search/\"+this.props.match.params.query} push />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchRedirect;","import React from \"react\";\r\nimport \"./GoodPage.scss\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport API from \"../../classes/API\";\r\nimport Cart from \"../../classes/Cart\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass GoodPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            good: {},\r\n            search: false,\r\n            redirect: false,\r\n            isInCart: false,\r\n            redirectToCart: false,\r\n        }\r\n\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n        this.back = this.back.bind(this);\r\n        this.addCart = this.addCart.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        API.getGoodById(+this.props.match.params.id).then(good => {\r\n            console.log(good);\r\n            this.setState({\r\n                ...this.state, \r\n                good\r\n            })\r\n        })\r\n        let item = API.getItemById(+this.props.match.params.id);\r\n        if(item){\r\n            this.setState({\r\n                ...this.state,\r\n                isInCart: true\r\n            });\r\n        }\r\n    }\r\n\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    back(){\r\n        this.setState({\r\n            ...this.state,\r\n            redirect: true\r\n        })\r\n    }\r\n\r\n    addCart(){\r\n        if(this.state.isInCart){\r\n            this.setState({\r\n                ...this.state,\r\n                redirectToCart: true,\r\n            })\r\n        }else{\r\n            this.setState({\r\n                ...this.state,\r\n                isInCart: true,\r\n            });      \r\n            Cart.addItem(this.state.good.id);\r\n        }\r\n    }\r\n\r\n    formatPrice(price = 0) {\r\n        return price.toLocaleString('en');\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/black-friday\" push />\r\n        }\r\n        if(this.state.redirectToCart){\r\n            return <Redirect to=\"/black-friday/cart\" push />\r\n        }\r\n        return(\r\n            <div className=\"good-page\">\r\n                <Header openSearch={this.openSearch} />\r\n                <div className=\"good-page__header\">\r\n                    <div className=\"good-page__header-back\" onClick={this.back}></div>\r\n                </div>\r\n                <div className=\"good-page__content\">\r\n                    <div className=\"good-page__image-block\">\r\n                        <img className=\"good-page__image\" src={this.state.good ? (process.env.REACT_APP_BASE_API_URL+this.state.good.imageUrl) : (\"\")} /> \r\n                        <button type=\"button\" className={\"good-page__button\"+(this.state.isInCart ? \" good-page_inCart\" : \"\")} onClick={this.addCart}>\r\n                            {this.state.isInCart ? (\r\n                                \"Уже в корзине\"\r\n                            ) : (\r\n                                \"Добавить в корзину\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"good-page__content-block\">\r\n                        <span className=\"good-page__title\">\r\n                            {this.state.good.title}\r\n                        </span>\r\n                        <span className=\"good-page__brand\">\r\n                            {this.state.good.brand}\r\n                        </span>\r\n                        <span className=\"good-page__count\">\r\n                            В наличии: {this.state.good.quantity}шт.\r\n                        </span>\r\n                        <span className=\"good-page__price_old\">\r\n                            {this.formatPrice(this.state.good.price)}₽\r\n                        </span>\r\n                        <span className=\"good-page__price_new\">\r\n                            {this.formatPrice(this.state.good.finalPrice)}₽\r\n                        </span>\r\n                        <span className=\"good-page__table-title\">\r\n                            Характеристики\r\n                        </span>\r\n                        {this.state.good.parameters ? (this.state.good.parameters.map((param, i) => (\r\n                                <div key={i} className=\"good-page__table\">\r\n                                    <div className=\"good-page__table-row\">\r\n                                        <div className=\"good-page__table-cell\">\r\n                                            {param.title}\r\n                                        </div>\r\n                                        <div className=\"good-page__table-cell\">\r\n                                            {param.value}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))) : (<div></div>)}\r\n                    </div>\r\n                </div>\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoodPage;","import React from \"react\";\r\nimport \"./404.scss\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Error404 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            good: {},\r\n            search: false,\r\n            redirect: false,\r\n        }\r\n\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n    }\r\n\r\n\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"error404\">\r\n                <Header openSearch={this.openSearch} />\r\n                <div className=\"error404__content\">\r\n                    <span className=\"error404__title\">\r\n                        Как вас сюда занесло?\r\n                    </span>\r\n                    <Link to='/' className=\"error404__link\">Главная</Link>\r\n                </div>\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Error404;","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport \"./Form.scss\";\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            search: false,\r\n            isSent: false,\r\n            name: '',\r\n            surname: '',\r\n            phone: '',\r\n            error: false,\r\n        }\r\n\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n\r\n        this.handleNameInput = this.handleNameInput.bind(this);\r\n        this.handleSurnameInput = this.handleSurnameInput.bind(this);\r\n        this.handlePhoneInput = this.handlePhoneInput.bind(this);\r\n    }\r\n\r\n\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    handleNameInput(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state, \r\n            name: event.target.value\r\n        });\r\n    }\r\n    handleSurnameInput(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state, \r\n            surname: event.target.value\r\n        });\r\n    }\r\n    handlePhoneInput(event){\r\n        event.persist();\r\n        this.setState({\r\n            ...this.state, \r\n            phone: event.target.value\r\n        });\r\n    }\r\n\r\n    submit(){\r\n        if(this.state.name !== \"\" && this.state.surname !== \"\" && this.state.phone !== \"\"){\r\n            this.setState({\r\n                ...this.state, \r\n                isSent: true,\r\n            })\r\n        }else{\r\n            this.setState({\r\n                ...this.state, \r\n                error: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"form\">\r\n                <Header openSearch={this.openSearch} />\r\n                {this.state.isSent ? (\r\n                    <span className=\"form__success\">\r\n                        Ваш заказ принят и скоро будет обработан!\r\n                    </span>\r\n                ) : (\r\n                    <div className=\"form__content\">\r\n                        <span className=\"form__title\">\r\n                            Оформление заказа\r\n                        </span>\r\n                        <input type=\"text\" className=\"form__input\" onChange={this.handleNameInput} placeholder=\"Имя\" />\r\n                        <input type=\"text\" className=\"form__input\" onChange={this.handleSurnameInput} placeholder=\"Фамилия\" />\r\n                        <input type=\"phone\" className=\"form__input\" onChange={this.handlePhoneInput} placeholder=\"Телефон\" />\r\n                        {\r\n                            this.state.error ? (\r\n                                <span className=\"form__error\">Заполните все поля</span>\r\n                            ) : (\r\n                                <div></div>\r\n                            )\r\n                        }\r\n                        <button type=\"button\" onClick={this.submit} className=\"form__button\">Подтвердить</button>\r\n                    </div>\r\n                )}\r\n                <Search shown={this.state.search} closeHandler={this.closeSearch}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport CartPage from \"./pages/Cart/Cart\";\r\nimport SearchPage from \"./pages/Search/Search\";\r\nimport SearchRedirect from \"./pages/SearchRedirect/SearchRedirect\";\r\nimport GoodPage from \"./pages/GoodPage/GoodPage\";\r\nimport Error404 from \"./pages/404/404\";\r\nimport Form from \"./pages/Form/Form\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            search: false,\r\n            redirect: false,\r\n            query: \"\",\r\n        }\r\n\r\n        this.toggleSearch = this.toggleSearch.bind(this);\r\n        this.closeSearch = this.closeSearch.bind(this);\r\n        this.openSearch = this.openSearch.bind(this);\r\n    }\r\n\r\n    toggleSearch() {\r\n        this.setState(prevState => ({\r\n            search: !prevState.search\r\n        }));\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(`[SEARCH] - ${this.state.search}`)\r\n    }\r\n    closeSearch() {\r\n        console.log(\"[SEARCH] - CLOSE\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: false,\r\n        })\r\n    }\r\n    openSearch() {\r\n        console.log(\"[SEARCH] - OPEN\")\r\n        this.setState({\r\n            ...this.state,\r\n            search: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={() => (<Redirect push to=\"/black-friday\" />)} />\r\n                        <Route path=\"/black-friday/\" exact component={Home} />\r\n                        <Route path=\"/black-friday/filter/:type\" component={Home} />\r\n                        <Route path=\"/black-friday/cart\" component={CartPage} />\r\n                        <Route path=\"/black-friday/form\" component={Form} />\r\n                        <Route path=\"/black-friday/good/:id\" component={props => <GoodPage {...props} />} />\r\n                        <Route path=\"/black-friday/search/:query?\" component={props => <SearchPage {...props} openSearch={this.openSearch} />}  />\r\n                        <Route path=\"/black-friday/search_redirect/:query\" component={props=><SearchRedirect {...props} />}/>\r\n                        <Route component={Error404}/>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}